
CREATE TABLE product 
(
	p_code NUMBER(10) PRIMARY KEY,
	p_name VARCHAR2(15) NOT NULL,
	p_price NUMBER(5),
	quantity number(4)
);


CREATE SEQUENCE seq

START WITH 1

INCREMENT BY 1;


INSERT INTO product values (seq.nextval,&p_code,'&p_name',&p_price,&quantity);


CREATE TABLE trans
(
	tid NUMBER(10),
	tdate NUMBER(10),
	quan_purchase NUMBER(5)
);


CREATE SEQUENCE add

START WITH 100

INCREMENT BY 1;

ALTER TABLE trans ADD(p_code number(5) REFERENCES product(p_code));

INSERT INTO trans values (add.nextval,&tid,'tdate',&quan_purchase ,&);



CREATE OR REPLACE PROCEDURE billTrans(para_code IN number )

IS

v_pcode number;
v_pname varchar2(12);
v_price product.p_price%TYPE;
v_tid number;
v_quanPurchase trans.quan_purchase%TYPE;
v_totalCost number;

price_required exception;

CURSOR C1 IS SELECT p.p_code,p.p_name,p.p_price,t.tid,t.quan_purchase FROM product p,trans t WHERE p.p_code=t.p_code and p.p_code=para_code ;

BEGIN
	OPEN C1;
	
	FETCH C1 INTO v_pcode,v_pname,v_price,v_tid,v_quanPurchase;
	
	IF v_price IS NULL THEN 
		
	RAISE price_required ;

	END IF;
	
	IF C1%NOTFOUND THEN
	
		RAISE NO_Data_FOUND;
	
	ELSE 

			v_totalcost := v_price * v_quanPurchase;

			dbms_output.put_line('product code' ||' '|| v_pcode);
			dbms_output.put_line('product price' ||' '||v_price);
			dbms_output.put_line('quantity purchased' ||' '|| v_quanPurchase);
			dbms_output.put_line('totalcost ' ||' '||v_totalCost);
			
			
	
	END IF;
	
	CLOSE C1;

EXCEPTION
 
WHEN NO_DATA_FOUND THEN

dbms_output.put_line( 'p_code' || 'Does not exist');

WHEN price_required THEN 

dbms_output.put_line ('p_price' || 'Enter valid product price');
END;



	


